////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////             Priest Scrolls              //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

COPY ~%folder%/lib/lists/pr_full.tpa~ ~override~  //spl source_ref --> create status
COPY ~%folder%/lib/lists/pr_scrol.tpa~ ~override~ //spl source_ref --> scroll source ref (for adding to scroll list for placement and bam check)
COPY ~%folder%/lib/lists/scrl_lv.tpa~ ~override~ //scroll source ref --> spell level (for adding to scroll list for placement )
COPY ~%folder%/lib/lists/store_list.tpa~ ~override~ //scroll source ref --> spell level (for adding to scroll list for placement )
COPY ~%folder%/lib/lists/stor_dr.tpa~ ~override~ // higher lev druid stores
COPY ~%folder%/lib/lists/stor_cl.tpa~ ~override~ //higher lev cleric stores
COPY ~%folder%/lib/lists/scr_stus.tpa~ ~override~ //scroll source ref --> create status
COPY ~%folder%/lib/lists/rand_scr.tpa~ ~override~  //spl source_ref --> create status
//rand items
//cleric
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override~ //Cleric lev 1 scroll
COPY ~%folder%/data/misc/RNDPS2.itm~ ~override~ //Cleric lev 2 scroll
COPY ~%folder%/data/misc/RNDPS3.itm~ ~override~ //Cleric lev 3 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDPS4.itm~ //Cleric lev 4 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDPS5.itm~ //Cleric lev 5 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDPS6.itm~ //Cleric lev 6 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDPS7.itm~ //Cleric lev 7 scroll
//druid
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS1.itm~ //Druid lev 1 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS2.itm~ //Druid lev 2 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS3.itm~ //Druid lev 3 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS4.itm~ //Druid lev 4 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS5.itm~ //Druid lev 5 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS6.itm~ //Druid lev 6 scroll
COPY ~%folder%/data/misc/RNDPS1.itm~ ~override/RNDDS7.itm~ //Druid lev 7 scroll

//some missing bams
COPY ~%folder%/data/scrolls/bam/missing~ ~override~
//special cases
COPY ~%folder%/data/scrolls/bam/missing~ ~override~

//random tables, are they in?
ACTION_IF !(FILE_EXISTS_IN_GAME ~rndtres.2da~) BEGIN
    COPY ~%folder%/data/misc/rndtres.2da~ ~override~
END

//random scroll stuff
INCLUDE ~override/rand_scr.tpa~  //

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Create spell to scroll list

COPY_EXISTING_REGEXP GLOB ~.*\.spl~ ~override~ //copies all spl files
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
    READ_BYTE 0x001C type //Spell type
     PATCH_IF type = 2 BEGIN   //priest spells only
         READ_LONG  0x0008 name //spell name
         PATCH_IF (%name% > 0) BEGIN
         INNER_PATCH_SAVE sp_res ~%SOURCE_RES%~ BEGIN  END
             READ_BYTE 0x0021 exclusive //general type
                PATCH_IF ((exclusive BAND 0b11000000) = 0b00000000)   BEGIN //If General type (I think)
               // PATCH_PRINT "filename is %sp_res% and SPPR101"
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~general~"
                  END //end inner action
                END//end general type
                ELSE PATCH_IF ((exclusive BAND 0b11000000) = 0b10000000)   BEGIN //If Cleric exclusive (I think)
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~cleric~"
                  END //end inner action
                END//end cleric type
                ELSE PATCH_IF ((exclusive BAND 0b11000000) = 0b01000000)   BEGIN //If Druid exclusive (I think)
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~druid~"
                  END //end inner action
                END//end druid type
                //let's try to exclude subspells
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "[101-999][a-z]") BEGIN //not contains a letter after sp numbers
                        INNER_PATCH_SAVE remove ~%sp_res%~ BEGIN  END
                      //  PATCH_PRINT "filename is %remove%"
                          INNER_ACTION BEGIN
		             COPY_EXISTING ~pr_full.tpa~ ~override~
                                 REPLACE_TEXTUALLY "~%remove%~ => ~druid~" "~%remove%~ => ~no~"
		                 REPLACE_TEXTUALLY "~%remove%~ => ~general~" "~%remove%~ => ~no~"
  		                 REPLACE_TEXTUALLY "~%remove%~ => ~cleric~" "~%remove%~ => ~no~"
                          END //inner patch
                   END
                   //now lets exclude a specific list os spells not actually meant to be cast in this way 
                   //list: DW#FPPLO, DGFAITH, DGARCHON, DEVAHEAL, SPJA01
                   //CONTINUE
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "SPPR[8-9][01-99]") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPPR[1-7][5-9][1-9]") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPWI") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPCL") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPIN") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPWM") OR
                            ("%sp_res%" STRING_EQUAL_CASE "KELDORN") OR
                            ("%sp_res%" STRING_EQUAL_CASE "OHBGLOV1") OR
                            ("%sp_res%" STRING_EQUAL_CASE "DGRIGHT") OR
                            ("%sp_res%" STRING_EQUAL_CASE "OHPRGD10") OR
                            ("%sp_res%" STRING_EQUAL_CASE "OHDXDIS") OR
                            ("%sp_res%" STRING_EQUAL_CASE "SENSPIHE") OR
                            ("%sp_res%" STRING_EQUAL_CASE "SPYANCD") OR
                            ("%sp_res%" STRING_EQUAL_CASE "CDPR417") OR
                            ("%sp_res%" STRING_EQUAL_CASE "DGFAITH") OR
                            ("%sp_res%" STRING_EQUAL_CASE "DGARCHON") OR
                            ("%sp_res%" STRING_EQUAL_CASE "DEVAHEAL") OR
                            ("%sp_res%" STRING_EQUAL_CASE "SPJA01") OR
                            ("%sp_res%" STRING_EQUAL_CASE "DW#FPPLO") BEGIN
                                  INNER_ACTION BEGIN
                                //  PRINT "%sp_res% and %remove%"
                                       COPY_EXISTING ~pr_full.tpa~ ~override~
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~druid~" "~%sp_res%~ => ~no~"
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~general~" "~%sp_res%~ => ~no~"
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~cleric~" "~%sp_res%~ => ~no~"
                                  END
                   END //end specific exceptions
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "WISH") BEGIN //let's exclude individual wishes
                       // PATCH_PRINT "filename is %sp_res%"
                        INNER_PATCH_SAVE remove ~%sp_res%~ BEGIN  END
                        INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "~%remove%~ => ~druid~" "~%remove%~ => ~no~"
		      REPLACE_TEXTUALLY "~%remove%~ => ~general~" "~%remove%~ => ~no~"
		      REPLACE_TEXTUALLY "~%remove%~ => ~cleric~" "~%remove%~ => ~no~"
		        END//inner action to remove wish
                   END //end string contains wish
                   PATCH_IF ("%sp_res%" STRING_MATCHES_REGEXP "SPPR[1-7][01-49]") AND ("%sp_res%" STRING_CONTAINS_REGEXP "WISH") BEGIN //name not contain wish or SPPR
                       INNER_PATCH_SAVE variant ~%sp_res%~ BEGIN  END
                      // PATCH_PRINT "filename is %variant%"
                       //need to now look in all clabs for such files. If they exist, change listing to match class (kit?)
                            INNER_ACTION BEGIN
                            //shaman exception (not in kitlist (why?)
                                ACTION_IF (FILE_CONTAINS_EVALUATED(~CLABSH01.2da~ ~GA_%variant%~)) BEGIN
                                   //   PRINT "filename is %variant%"
                                      COPY_EXISTING ~pr_full.tpa~ ~override~
                                          REPLACE_TEXTUALLY "~%variant%~ => ~druid~" "~%variant%~ => ~shaman~"
                                          REPLACE_TEXTUALLY "~%variant%~ => ~general~" "~%variant%~ => ~shaman~"
                                          REPLACE_TEXTUALLY "~%variant%~ => ~cleric~" "~%variant%~ => ~shaman~"
                                END
                            END  //inner action
                            INNER_ACTION BEGIN
	                         COPY_EXISTING kitlist.2da override
		                 READ_2DA_ENTRIES_NOW kitlist 3
		                 FOR (row = 3; row < kitlist; ++row) BEGIN // Skip past the vanilla kits
			             READ_2DA_ENTRY_FORMER kitlist row 1 label
			             READ_2DA_ENTRY_FORMER kitlist row 5 clab
			             READ_2DA_ENTRY_FORMER kitlist row 8 class
			             PATCH_IF class = 11 OR   // druid
                                              class = 6  OR   //paladin   
                                              class = 12 OR   //ranger
                                              class = 3  OR   //cleric
                                              class = 21 BEGIN //shaman
			                  PATCH_IF (FILE_CONTAINS_EVALUATED(~%clab%.2da~ ~GA_%variant%~)) BEGIN
                                           //   PATCH_PRINT "clab is %clab%.2da. What is %variant%? What is the %label%?"
                                                INNER_PATCH_SAVE clab_n ~%clab%~ BEGIN  END
                                                INNER_PATCH_SAVE kit_n ~%label%~ BEGIN  END
                                                INNER_ACTION BEGIN
                                                     COPY_EXISTING ~pr_full.tpa~ ~override~
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~druid~" "~%variant%~ => ~%label%~"
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~general~" "~%variant%~ => ~%label%~"
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~cleric~" "~%variant%~ => ~%label%~"
                                                END//inner action
                                          END
			             END
                                 END //for loop
                            END//inner action end
                   END //
         END //non-empty name
     END //priest type
    END //valid file
    BUT_ONLY

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// exclude scrolls that already exist


COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all itm files
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
    READ_BYTE 0x001C type //Item type
        PATCH_IF (type = 0x000b) BEGIN  //if scroll type
        //check if casts spell from scroll list.  If so, place in 'no' category
        //add these scrolls for placement
		READ_LONG  0x64 "abil_off" ELSE 0
  		READ_SHORT 0x68 "abil_num" ELSE 0
		READ_LONG  0x6a "fx_off"   ELSE 0
  		FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
    		READ_BYTE ("%abil_off%" + (0x38 * "%index%")) "type"
			PATCH_IF ("%type%" = 3) BEGIN // magical
      			READ_SHORT ("%abil_off%" + 0x1e + (0x38 * "%index%")) "abil_fx_num"
      			READ_SHORT ("%abil_off%" + 0x20 + (0x38 * "%index%")) "abil_fx_idx"
      			FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
        			READ_SHORT ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
        			PATCH_IF (("%opcode%" = 146) OR ("%opcode%" = 148)) BEGIN // cast spell
        			     READ_ASCII ("%fx_off%" + 0x14 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "resource"
        			     //PATCH_PRINT "%resource%"
                                     INNER_PATCH_SAVE da_spl ~%resource%~ BEGIN  END
                                     INNER_PATCH_SAVE da_scr ~%SOURCE_RES%~ BEGIN  END
                                     INNER_ACTION BEGIN
                                         ACTION_IF (FILE_CONTAINS_EVALUATED(~pr_full.tpa~ ~%da_spl%~))  BEGIN
                                          //    PRINT "file is %SOURCE_RES%. spell is %da_spl%"
                                              //LOCATION OF ISSUE 
                                                   COPY_EXISTING ~pr_full.tpa~ ~override~
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~druid~" "~%da_spl%~ => ~no~"
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~general~" "~%da_spl%~ => ~no~"
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~cleric~" "~%da_spl%~ => ~no~"
		                                   COPY_EXISTING ~pr_scrol.tpa~ ~override~
		                                       REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%da_spl%~ => ~%da_scr%~"
		                                   INNER_PATCH_SAVE d_scr ~%da_scr%~ BEGIN  END
                                                   INNER_ACTION BEGIN  //now get level
                                                   COPY_EXISTING ~%da_spl%.SPL~ ~override~
                                                       PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
                                                       READ_LONG  0x0034 level //spell level
                                                           INNER_PATCH_SAVE d_level ~%level%~ BEGIN  END
                                                              INNER_ACTION BEGIN
                                                                   COPY_EXISTING ~scrl_lv.tpa~ ~override~
		                                                   REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%d_scr%~ => ~%d_level%~"
                                                              END
		                                      END  //patch if
		                                      BUT_ONLY
                                                   END
                                         END //action if file contains
                                     END //inner action
        			END //opcode check
      			END //for loop
      			END //magical
		END//for loop
        END
    END
    BUT_ONLY

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Actually create scrolls

//base list
INCLUDE ~override/pr_full.tpa~  //

//part 1
ACTION_PHP_EACH pr_full_list AS scr_spl => status BEGIN
 ACTION_IF !("%status%" STRING_EQUAL_CASE "no") BEGIN
 //PRINT ~%scr_spl% is spell file name; %status% is status.~
   COPY_EXISTING ~%scr_spl%.SPL~ ~override~
     PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      //       PATCH_IF ("%status%" STRING_EQUAL_CASE "general") BEGIN  //general scrolls (no checks for fnP needed--should be legit universal)
             READ_LONG  0x0034 level //spell level
             READ_LONG  0x0008 name //spell name
             READ_STRREF 0x0008 s_name
	     READ_LONG  0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
               INNER_PATCH_SAVE d_level ~%level%~ BEGIN  END
               INNER_PATCH_SAVE da_spll ~%scr_spl%~ BEGIN  END
               INNER_PATCH_SAVE spellicon ~%SOURCE_RES%~ BEGIN  END
               INNER_PATCH_SAVE da_status ~%status%~ BEGIN  END
               INNER_PATCH_SAVE scroll_ref ~%SOURCE_RES%~ BEGIN
                 REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~SP~ ~B_~
                  //  PATCH_PRINT "What does %scroll_ref% say for %da_spll%?"
                 END  //now, create spell to scroll list for later use, as well as scroll to level
                 INNER_ACTION BEGIN
                // PRINT "%da_spll% and %scroll_ref%"
		      COPY_EXISTING ~pr_scrol.tpa~ ~override~
		          REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%da_spll%~ => ~%scroll_ref%~"
                      COPY_EXISTING ~scrl_lv.tpa~ ~override~
		          REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%scroll_ref%~ => ~%d_level%~"
                 END
                 /*
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%clock%.ITM~   //Level 1 universal as generic.  usable by all druid/clerics etc.
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                    
                 */
      //    END// general spell types
     END
     BUT_ONLY
 END //if
END

//part 2

//spell to scroll list
INCLUDE ~override/pr_scrol.tpa~  //   pr_scr

ACTION_PHP_EACH pr_full_list AS scr_spl => status BEGIN
  ACTION_PHP_EACH pr_scr AS spl => scr BEGIN
    ACTION_IF !("%status%" STRING_EQUAL_CASE "no") BEGIN
      ACTION_IF ("%scr_spl%" STRING_EQUAL_CASE "%spl%") BEGIN
            COPY_EXISTING ~%scr_spl%.SPL~ ~override~
               PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
                  READ_LONG  0x0008 name //spell name
                  READ_STRREF 0x0008 s_name
                  READ_LONG  0x0034 level //spell level
	                READ_LONG  0x0050 desc //description
	                READ_SHORT 0x007E target //Target-check
	                READ_SHORT 0x0080 range //range-check
                     INNER_PATCH_SAVE spellicon ~%SOURCE_RES%~ BEGIN  END
                      PATCH_IF ("%status%" STRING_EQUAL_CASE "general") BEGIN
                          INNER_ACTION BEGIN
                            COPY ~%folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid/clerics etc.
                              WRITE_LONG 0x0008 ~%name%~
                              WRITE_LONG 0x000c ~%name%~
                              WRITE_LONG 0x0054 ~%desc%~
                              WRITE_SHORT 0x007E target //Target-check
                              WRITE_SHORT 0x0080 range //range-check
                              WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                              WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                              WRITE_LONG 0x0034 (level * 100)       //cost
                              LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                           END //end inner action 
                      END          
                       ELSE PATCH_IF ("%status%" STRING_EQUAL_CASE "druid") BEGIN  //druid spells (prob need special checks for fnp...)
                           INNER_ACTION BEGIN
                              COPY ~%folder%/data/scrolls/priest_1/b_dr102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid
                              WRITE_LONG 0x0008 ~%name%~
                              WRITE_LONG 0x000c ~%name%~
                              WRITE_LONG 0x0054 ~%desc%~
                              WRITE_SHORT 0x007E target //Target-check
                              WRITE_SHORT 0x0080 range //range-check
                              WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                              WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                              WRITE_LONG 0x0034 (level * 100)       //cost
                              LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                            END //end inner action
                         END//druid
                       ELSE PATCH_IF ("%status%" STRING_EQUAL_CASE "cleric") BEGIN  //cleric spells (prob need special checks for fnp...)
                 //fnp check here probably
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_cl102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all cleric
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                    END //end inner action
                 END//cleric
                 ELSE PATCH_IF ("%status%" STRING_EQUAL_CASE "shaman") BEGIN  //druid spells (prob need special checks for fnp...)
                 //fnp check here probably
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_sh102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                    END //end inner action
                 END//shaman
                 ELSE BEGIN //for kit specific spells
                   INNER_ACTION BEGIN
	                           COPY_EXISTING kitlist.2da override
		                         READ_2DA_ENTRIES_NOW kitlist 3
		                            FOR (row = 3; row < kitlist; ++row) BEGIN // Skip past the vanilla kits
			                          READ_2DA_ENTRY_FORMER kitlist row 1 label
			                          READ_2DA_ENTRY_FORMER kitlist row 5 clab
			                          READ_2DA_ENTRY_FORMER kitlist row 8 class
			                          READ_2DA_ENTRY_FORMER kitlist row 9 use
			                             PATCH_IF ("%label%" STRING_EQUAL_CASE "%status%") BEGIN
                                                    // PATCH_PRINT "%label% is %status% and class is %class% and use is %use%"
                                              INNER_PATCH_SAVE k_use ~%use%~ BEGIN END
                                              PATCH_IF class = 3 BEGIN  //cleric class
                                                  // PATCH_PRINT "cleric"
                                                        INNER_ACTION BEGIN    //TEST KIT EXCLUSIVITY
                                                        COPY ~%folder%/data/scrolls/priest_1/B_CL001.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 319 parameter1 = EVAL ~%k_use%~ END
                                                        END //end inner action
                                              END  //if cleric
                                              PATCH_IF class = 6 BEGIN  //pally class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_PA001.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 319 parameter1 = EVAL ~%k_use%~ END
                                                        END //end inner action
                                              END  //if pally
                                              PATCH_IF class = 11 BEGIN  //druid class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_DR001.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 319 parameter1 = EVAL ~%k_use%~ END
                                                        END //end inner action
                                              END  //if druid
                                              PATCH_IF class = 12 BEGIN  //ranger class
                                                        INNER_ACTION BEGIN
                                                        //  PRINT "%name% and %desc% and %spellicon% and %k_use% and %scr%"
                                                        COPY ~%folder%/data/scrolls/priest_1/B_RA001.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 319 parameter1 = EVAL ~%k_use%~ END
                                                        END //end inner action
                                              END  //if ranger
                                              PATCH_IF class = 21 BEGIN  //shaman class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_DR001.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%scr_spl%~ END
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 319 parameter1 = EVAL ~%k_use%~ END
                                                        END //end inner action
                                              END  //if cleric
                                          END  //label = status
                                 END //for loop
                                 BUT_ONLY
                   END//inner action
                 END//kit specific spells
      //PATCH_PRINT "test %name% %s_name% %desc% %target% %range%"
      END  //Source Size
      BUT_ONLY
     END
    END // Not no
  END
END    // spell to status

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// missing Scroll bams

//check if certain engine specific bams are not in game.  Copy over if not
//do php re spell to scroll
//check if %spellname%a.bam exists in game
//if not, copy over suitable substitue


ACTION_PHP_EACH pr_scr AS spl_ref => scr_ref BEGIN     //just for scroll source ref
  COPY_EXISTING ~%scr_ref%.itm~ ~override~
     PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
        READ_ASCII 0x003a da_ikon
            PATCH_IF !(FILE_EXISTS_IN_GAME ~%da_ikon%.bam~) BEGIN
            INNER_PATCH_SAVE new_icon ~%da_ikon%~ BEGIN  END
             //   PATCH_PRINT "%da_ikon% is missing"
             //   PATCH_PRINT "%SOURCE_RES% for item name"
                //special cases
                READ_STRREF 0x000c spl_name
                PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Chromatic Orb")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI118A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Web")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI215A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Lightning Bolt")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI308A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Improved Invisibility")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI405A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Chaos")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI508A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Chain Lightning")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI615A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Haste")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI305A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Minor Spell Deflection")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI318A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Protection From Normal Missiles") OR ("%spl_name%" STRING_EQUAL_CASE "Protection from Missiles") BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPWI311A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Animal Summoning I")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPPR402A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Animal Summoning II")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPPR501A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE PATCH_IF ("%spl_name%" STRING_EQUAL_CASE "Animal Summoning III")  BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/special/SPPR602A.bam~ ~override/%new_icon%.bam~
                  END
                END
                ELSE BEGIN
                  INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/bam/SPPR101A.bam~ ~override/%new_icon%.bam~
                  END
                END
            END
     END
     BUT_ONLY
END

//CONTINUE

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Scroll placement

//scroll to level list
INCLUDE ~override/scrl_lv.tpa~  //
//blank txt files for

/* Notes
Universal:
SCRLPET stone to flesh Level 1
POTN20 antidote level 2
RESTORE less restoration level 3
SCRL59 (neut poison) lev 4
SCRL63 (raise dead) level 5
WAND11 (wand of heavens) level 6-7

cleric: 
POTN08 (pot of healing) (if sell, sells all cleric exclusive as universal)

Druid: 

RING03 (druid's ring) (if sell, sells all druid exclusive as universal)

Evil: 


*/

//CONTINUE WITH THIS
//need to do a scroll ref to status
ACTION_PHP_EACH pr_scr AS sply_ref => scry_ref BEGIN
  ACTION_PHP_EACH pr_full_list AS splie_ref => status_yo BEGIN
       ACTION_IF ("%sply_ref%" STRING_EQUAL_CASE "%splie_ref%") BEGIN
          // PRINT "%sply_ref% and %splie_ref% match! Horray!"
	  COPY_EXISTING ~scr_stus.tpa~ ~override~
		          REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%scry_ref%~ => ~%status_yo%~"
       END
  END
END

INCLUDE ~override/scr_stus.tpa~  //

//Because it's easy, I'm going to give a few random lev 1 to 3 scrolls to all priest cres:
//populate  rndtres.2da APPEND ~rndtres.2da~ ~%my_list%~
//create a lev 1,2,3 array of gen and cleric spls:
ACTION_PHP_EACH scr_lvl AS scroll_ref => scroll_level BEGIN
 ACTION_PHP_EACH scroll_status AS scrz_ref => stat_us BEGIN
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "1") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_1~ => ~RNDPS1" "~CL_Lev_1~ => ~RNDPS1%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_1~ => ~RNDDS1" "~DR_Lev_1~ => ~RNDDS1%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "2") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_2~ => ~RNDPS2" "~CL_Lev_2~ => ~RNDPS2%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_2~ => ~RNDDS2" "~DR_Lev_2~ => ~RNDDS2%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "3") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_3~ => ~RNDPS3" "~CL_Lev_3~ => ~RNDPS3%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_3~ => ~RNDDS3" "~DR_Lev_3~ => ~RNDDS3%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "4") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_4~ => ~RNDPS4" "~CL_Lev_4~ => ~RNDPS4%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_4~ => ~RNDDS4" "~DR_Lev_4~ => ~RNDDS4%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "5") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_5~ => ~RNDPS5" "~CL_Lev_5~ => ~RNDPS5%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_5~ => ~RNDDS5" "~DR_Lev_5~ => ~RNDDS5%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "6") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_6~ => ~RNDPS6" "~CL_Lev_6~ => ~RNDPS6%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_6~ => ~RNDDS6" "~DR_Lev_6~ => ~RNDDS6%TAB%%scroll_ref%"
      END
    END
   END
   ACTION_IF ("%scroll_level%" STRING_EQUAL_CASE "7") BEGIN
    ACTION_IF ("%scroll_ref%" STRING_EQUAL_CASE "%scrz_ref%") BEGIN
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "cleric") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~CL_Lev_7~ => ~RNDPS7" "~CL_Lev_7~ => ~RNDPS7%TAB%%scroll_ref%"
      END
      ACTION_IF ("%stat_us%" STRING_EQUAL_CASE "general") OR ("%stat_us%" STRING_EQUAL_CASE "druid") BEGIN
         COPY_EXISTING ~rand_scr.tpa~ ~override~
           REPLACE_TEXTUALLY "~DR_Lev_7~ => ~RNDDS7" "~DR_Lev_7~ => ~RNDDS7%TAB%%scroll_ref%"
      END
    END
   END
 END
END


ACTION_PHP_EACH rand_place AS lev => my_list BEGIN
  APPEND ~rndtres.2da~ ~%my_list%~
END

COPY_EXISTING_REGEXP ~.*\.CRE~ ~override~
  READ_BYTE   0x273 class
  READ_ASCII  0x280 deathvar
  READ_STRREF 0x0008 s_name
  READ_BYTE 0x0234 lev1
  PATCH_IF  (NOT FILE_CONTAINS_EVALUATED(~pdialog.2da~ ~%deathvar%~)) BEGIN   //not joinable
   PATCH_IF (class = 3) OR (class = 8) OR (class = 14) OR (class = 15) OR !("%s_name%" STRING_CONTAINS_REGEXP "Priest") BEGIN // All clericy classes
      ADD_CRE_ITEM ~RNDPS1~ #1 #0 #0 ~IDENTIFIED~  ~INV~
      PATCH_IF (lev1 > 3) BEGIN
        ADD_CRE_ITEM ~RNDPS2~ #1 #0 #0 ~IDENTIFIED~  ~INV~
      END // lev >7
        PATCH_IF (lev1 > 5) BEGIN
          ADD_CRE_ITEM ~RNDPS3~ #1 #0 #0 ~IDENTIFIED~  ~INV~
        END // lev >5
         PATCH_IF (lev1 > 7) BEGIN
           ADD_CRE_ITEM ~RNDPS4~ #1 #0 #0 ~IDENTIFIED~  ~INV~
           ADD_CRE_ITEM ~RNDPS1~ #1 #0 #0 ~IDENTIFIED~  ~INV~
         END //lev >7
          PATCH_IF (lev1 > 9) BEGIN
           ADD_CRE_ITEM ~RNDPS5~ #1 #0 #0 ~IDENTIFIED~  ~INV~
          END //lev >9
           PATCH_IF (lev1 > 11) BEGIN
             ADD_CRE_ITEM ~RNDPS6~ #1 #0 #0 ~IDENTIFIED~  ~INV~
           END //lev >11
            PATCH_IF (lev1 > 13) BEGIN
             ADD_CRE_ITEM ~RNDPS7~ #1 #0 #0 ~IDENTIFIED~  ~INV~
             ADD_CRE_ITEM ~RNDPS2~ #1 #0 #0 ~IDENTIFIED~  ~INV~
            END //lev >11
     END // cleric class
   PATCH_IF (class = 16) OR (class = 11) OR !("%s_name%" STRING_CONTAINS_REGEXP "Druid") BEGIN // All clericy classes
      ADD_CRE_ITEM ~RNDDS1~ #1 #0 #0 ~IDENTIFIED~  ~INV~
      PATCH_IF (lev1 > 3) BEGIN
        ADD_CRE_ITEM ~RNDDS2~ #1 #0 #0 ~IDENTIFIED~  ~INV~
      END //lev >3
         PATCH_IF (lev1 > 5) BEGIN
           ADD_CRE_ITEM ~RNDDS3~ #1 #0 #0 ~IDENTIFIED~  ~INV~
         END // lev >5
          PATCH_IF (lev1 > 7) BEGIN
           ADD_CRE_ITEM ~RNDDS4~ #1 #0 #0 ~IDENTIFIED~  ~INV~
           ADD_CRE_ITEM ~RNDPS1~ #1 #0 #0 ~IDENTIFIED~  ~INV~
          END // lev >7
           PATCH_IF (lev1 > 9) BEGIN
             ADD_CRE_ITEM ~RNDDS5~ #1 #0 #0 ~IDENTIFIED~  ~INV~
           END // lev >9
             PATCH_IF (lev1 > 11) BEGIN
               ADD_CRE_ITEM ~RNDDS6~ #1 #0 #0 ~IDENTIFIED~  ~INV~
             END // lev >11
               PATCH_IF (lev1 > 13) BEGIN
                 ADD_CRE_ITEM ~RNDDS7~ #1 #0 #0 ~IDENTIFIED~  ~INV~
                 ADD_CRE_ITEM ~RNDPS2~ #1 #0 #0 ~IDENTIFIED~  ~INV~
               END // lev >13
    END // druid class
  END//not joinable
  BUT_ONLY



/* Notes
Universal:
SCRLPET stone to flesh Level 1
POTN20 antidote level 2
RESTORE less restoration level 3
SCRL59 (neut poison) lev 4
SCRL63 (raise dead) level 5
WAND11 (wand of heavens) level 6-7

cleric: 
POTN08 (pot of healing) (if sell, sells all cleric exclusive as universal)

Druid: 

RING03 (druid's ring) (if sell, sells all druid exclusive as universal) should sell all druid scrolls

Evil: 


*/
//let's create a list of relevant vendors:

COPY_EXISTING_REGEXP ~.*\.STO~ ~override~
  READ_BYTE 0x0008 type //Spell type
     PATCH_IF type = 3 OR 2 BEGIN   //temple or inn type
     	READ_BYTE 0x10 "flags" //ELSE 0
            PATCH_IF (("%flags%" BAND 0b00000001) = 0b000000001) BEGIN // if sells
                 LPF item_in_store
                     STR_VAR item="SCRLPET"   // sells stone to flesh (could sell 1st level scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_1 ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="RING03"   // sells druid ring (could sell all druid scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE druid_all ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="POTN08"   // sells druid ring (could sell all druid scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE cleric_all ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="POTN20"   // sells antidote (could sell all 2nd level scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_2 ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="RESTORE"   // sells lesser restore (could sell all 3rd level scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_3 ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="SCRL59"   // sells scroll n poison(could sell all priest scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_4 ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="SCRL63"   // sells scroll raise dead(could sell all priest scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_5 ~%value%~ BEGIN  END
                 LPF item_in_store
                     STR_VAR item="WAND11"   // sells wand of heavens (could sell all priest scrolls)
                     RET value
                 END      //
                 INNER_PATCH_SAVE univ_7 ~%value%~ BEGIN  END
                 INNER_PATCH_SAVE store_name ~%SOURCE_RES%~ BEGIN  END
                 INNER_ACTION BEGIN
                        ACTION_IF  (%univ_1% = 1) AND !(%univ_2% = 1) AND !(%univ_3% = 1) BEGIN
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~store_list.tpa~ ~override~  //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~1~"
                        END//action_if
                        ACTION_IF  (%univ_2% = 1) AND (%univ_1% = 1) AND !(%univ_3% = 1) BEGIN
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~store_list.tpa~ ~override~  //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~2~"
                        END//action_if
                        ACTION_IF  (%univ_3% = 1) AND (%univ_1% = 1) BEGIN
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~store_list.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~3~"
                        END//action_if
                        ACTION_IF  (%druid_all% = 1) AND (%univ_1% = 1) AND (%univ_4% = 1) AND !(%univ_5% = 1) AND !(%univ_7% = 1) BEGIN  //sells lev 4 druid scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_dr.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~4~"
                        END//action_if
                        ACTION_IF  (%druid_all% = 1) AND (%univ_1% = 1) AND (%univ_5% = 1) AND !(%univ_7% = 1) BEGIN  //sells lev 5 druid scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_dr.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~5~"
                        END//action_if
                        ACTION_IF  (%druid_all% = 1) AND (%univ_1% = 1) AND (%univ_7% = 1) BEGIN  //sells lev 7 druid scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_dr.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~7~"
                        END//action_if
                        ACTION_IF  (%cleric_all% = 1) AND (%univ_1% = 1) AND (%univ_4% = 1) AND !(%univ_5% = 1) AND !(%univ_7% = 1) BEGIN  //sells lev 4 cleric scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_cl.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~4~"
                        END//action_if
                        ACTION_IF  (%cleric_all% = 1) AND (%univ_1% = 1) AND (%univ_5% = 1) AND !(%univ_7% = 1) BEGIN  //sells lev 5 cleric scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_cl.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~5~"
                        END//action_if
                        ACTION_IF  (%cleric_all% = 1) AND (%univ_1% = 1) AND (%univ_7% = 1) BEGIN  //sells lev 7 cleric scrolls
                        //PRINT "Does this work at all?"
		           COPY_EXISTING ~stor_cl.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN
%store_name% => ~7~"
                        END//action_if
                 END //inner action

            END
     END
     BUT_ONLY

ACTION_IF GAME_IS ~iwdee~ THEN BEGIN  //add specific stores in iwdee
		           COPY_EXISTING ~stor_cl.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN

~EDTEMPLE~ => ~7~"
		           COPY_EXISTING ~stor_dr.tpa~ ~override~   //universal store list (not dru/cle specific)
		              REPLACE_TEXTUALLY "BEGIN" "BEGIN

~EDTEMPLE~ => ~7~"

END //if iwdee

///////////////////////////////////////////
/////now, to actually add to a store


INCLUDE ~override/store_list.tpa~  //

//lev 1 to lev 3 of any standard scroll where SCRLPET/POTN20/RESTORE is sold

ACTION_PHP_EACH main_store_list AS place => sto_lev BEGIN
//PRINT "%sto_lev% is whatnow?"
 ACTION_PHP_EACH scr_lvl AS thing => sc_lev BEGIN
  ACTION_PHP_EACH scroll_status AS da_scrol => da_status BEGIN
    ACTION_IF (%sto_lev% = %sc_lev%) OR (%sto_lev% > %sc_lev%) BEGIN
    ACTION_IF (%sc_lev% =1) OR (%sc_lev% =2) BEGIN
   // PRINT "%sto_lev% is whatnow?"
     ACTION_IF ("%thing%" STRING_EQUAL_CASE "%da_scrol%") BEGIN
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "general") BEGIN
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #5
      END//da_status and general
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "cleric") BEGIN
     // PRINT "%thing% goes in %place% if %da_scrol% is %thing% and %da_status% is general."
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #5
      END//da_status and cleric
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "druid") BEGIN
     // PRINT "%thing% goes in %place% if %da_scrol% is %thing% and %da_status% is general."
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #5
      END//da_status and druid
     END //thing and da_scrol
     END //scr lev 1 or 2
    ACTION_IF (%sc_lev% =3) BEGIN
   // PRINT "%sto_lev% is whatnow?"
     ACTION_IF ("%thing%" STRING_EQUAL_CASE "%da_scrol%") BEGIN
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "general") BEGIN
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #3
      END//da_status and general
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "cleric") BEGIN
     // PRINT "%thing% goes in %place% if %da_scrol% is %thing% and %da_status% is general."
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #3
      END//da_status and cleric
      ACTION_IF ("%da_status%" STRING_EQUAL_CASE "druid") BEGIN
     // PRINT "%thing% goes in %place% if %da_scrol% is %thing% and %da_status% is general."
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #3
      END//da_status and druid
     END //thing and da_scrol
     END //scr lev 3
    END //sto_lev = sc_lev
  END //scroll_status
 END //scr_lvl
END //main_store_list

//lev 4+ druid
INCLUDE ~override/stor_dr.tpa~  //
ACTION_PHP_EACH main_store_list_dr AS place => sto_lev BEGIN
//PRINT "%sto_lev% is whatnow?"
 ACTION_PHP_EACH scr_lvl AS thing => sc_lev BEGIN
    ACTION_IF (%sc_lev% =4) BEGIN //level 4 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #2
    END //scr lev 4
    ACTION_IF (%sc_lev% =5) AND (%sto_lev% > 4) BEGIN //level 5 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #2
    END //scr lev 5
    ACTION_IF (%sc_lev% =6) AND (%sto_lev% > 5) BEGIN //level 6 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #1
    END //scr lev 6
    ACTION_IF (%sc_lev% =7) AND (%sto_lev% > 6) BEGIN //level 7 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #1
    END //scr lev 7
 END    //scr lev php
END     //druid store php

//lev 4+ cleric
INCLUDE ~override/stor_cl.tpa~  //
ACTION_PHP_EACH main_store_list_cl AS place => sto_lev BEGIN
//PRINT "%sto_lev% is whatnow?"
 ACTION_PHP_EACH scr_lvl AS thing => sc_lev BEGIN
    ACTION_IF (%sc_lev% =4) BEGIN //level 4 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #2
    END //scr lev 4
    ACTION_IF (%sc_lev% =5) AND (%sto_lev% > 4) BEGIN //level 5 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #2
    END //scr lev 5
    ACTION_IF (%sc_lev% =6) AND (%sto_lev% > 5) BEGIN //level 6 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #1
    END //scr lev 6
    ACTION_IF (%sc_lev% =7) AND (%sto_lev% > 6) BEGIN //level 7 scr
        COPY_EXISTING ~%place%.sto~ ~override~
             ADD_STORE_ITEM "%thing%" #1 #0 #0 ~IDENTIFIED~ #1
    END //scr lev 7
 END//scro lev
END//cleric stor lev 4+

//CONTINUE