////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////             Priest Scrolls              //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

COPY ~%folder%/lib/lists/pr_full.tpa~ ~override~  //spl source_ref --> create status
COPY ~%folder%/lib/lists/pr_scrol.tpa~ ~override~ //source_ref --> scroll name (for adding to scroll list for placement )
COPY ~%folder%/lib/lists/scrl_lv.tpa~ ~override~ //source_ref --> scroll name (for adding to scroll list for placement )

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Create spell to scroll list

COPY_EXISTING_REGEXP GLOB ~.*\.spl~ ~override~ //copies all spl files
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
    READ_BYTE 0x001C type //Spell type
     PATCH_IF type = 2 BEGIN   //priest spells only
         READ_LONG  0x0008 name //spell name
         PATCH_IF (%name% > 0) BEGIN
         INNER_PATCH_SAVE sp_res ~%SOURCE_RES%~ BEGIN  END
             READ_BYTE 0x0021 exclusive //general type
                PATCH_IF ((exclusive BAND 0b11000000) = 0b00000000)   BEGIN //If General type (I think)
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~general~"
                  END //end inner action
                END//end general type
                ELSE PATCH_IF ((exclusive BAND 0b11000000) = 0b10000000)   BEGIN //If Cleric exclusive (I think)
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~cleric~"
                  END //end inner action
                END//end cleric type
                ELSE PATCH_IF ((exclusive BAND 0b11000000) = 0b01000000)   BEGIN //If Druid exclusive (I think)
                  INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%sp_res%~ => ~druid~"
                  END //end inner action
                END//end druid type
                //let's try to exclude subspells
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "[101-999][a-z]") BEGIN //contains a letter after sp numbers
                        INNER_PATCH_SAVE remove ~%sp_res%~ BEGIN  END
                        //PATCH_PRINT "filename is %remove%"
                          INNER_ACTION BEGIN
		             COPY_EXISTING ~pr_full.tpa~ ~override~
                                 REPLACE_TEXTUALLY "~%remove%~ => ~druid~" "~%remove%~ => ~no~"
		                 REPLACE_TEXTUALLY "~%remove%~ => ~general~" "~%remove%~ => ~no~"
  		                 REPLACE_TEXTUALLY "~%remove%~ => ~cleric~" "~%remove%~ => ~no~"
                          END //inner patch
                   END
                   //now lets exclude a specific list os spells not actually meant to be cast in this way 
                   //list: DW#FPPLO, DGFAITH, DGARCHON, DEVAHEAL, SPJA01
                   //CONTINUE
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "SPPR[8-9][01-99]") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPPR[1-7][5-9][1-9]") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPWI") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPCL") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPIN") OR
                            !("%sp_res%" STRING_CONTAINS_REGEXP "SPWM") OR
                            ("%sp_res%" STRING_EQUAL "KELDORN") OR
                            ("%sp_res%" STRING_EQUAL "OHBGLOV1") OR
                            ("%sp_res%" STRING_EQUAL "DGRIGHT") OR
                            ("%sp_res%" STRING_EQUAL "OHPRGD10") OR
                            ("%sp_res%" STRING_EQUAL "OHDXDIS") OR
                            ("%sp_res%" STRING_EQUAL "SENSPIHE") OR
                            ("%sp_res%" STRING_EQUAL "SPYANCD") OR
                            ("%sp_res%" STRING_EQUAL "CDPR417") OR
                            ("%sp_res%" STRING_EQUAL "DGFAITH") OR
                            ("%sp_res%" STRING_EQUAL "DGARCHON") OR
                            ("%sp_res%" STRING_EQUAL "DEVAHEAL") OR
                            ("%sp_res%" STRING_EQUAL "SPJA01") OR
                            ("%sp_res%" STRING_EQUAL "DW#FPPLO") BEGIN
                                  INNER_ACTION BEGIN
                                //  PRINT "%sp_res% and %remove%"
                                       COPY_EXISTING ~pr_full.tpa~ ~override~
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~druid~" "~%sp_res%~ => ~no~"
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~general~" "~%sp_res%~ => ~no~"
                                           REPLACE_TEXTUALLY "~%sp_res%~ => ~cleric~" "~%sp_res%~ => ~no~"
                                  END
                   END //end specific exceptions
                   PATCH_IF !("%sp_res%" STRING_CONTAINS_REGEXP "WISH") BEGIN //let's exclude individual wishes
                       // PATCH_PRINT "filename is %sp_res%"
                        INNER_PATCH_SAVE remove ~%sp_res%~ BEGIN  END
                        INNER_ACTION BEGIN
		    COPY_EXISTING ~pr_full.tpa~ ~override~
		      REPLACE_TEXTUALLY "~%remove%~ => ~druid~" "~%remove%~ => ~no~"
		      REPLACE_TEXTUALLY "~%remove%~ => ~general~" "~%remove%~ => ~no~"
		      REPLACE_TEXTUALLY "~%remove%~ => ~cleric~" "~%remove%~ => ~no~"
		        END//inner action to remove wish
                   END //end string contains wish
                   PATCH_IF ("%sp_res%" STRING_MATCHES_REGEXP "SPPR[1-7][01-49]") AND ("%sp_res%" STRING_CONTAINS_REGEXP "WISH") BEGIN //name not contain wish or SPPR
                       INNER_PATCH_SAVE variant ~%sp_res%~ BEGIN  END
                       // PATCH_PRINT "filename is %sp_res%"
                       //need to now look in all clabs for such files. If they exist, change listing to match class (kit?)
                            INNER_ACTION BEGIN
                            //shaman exception (not in kitlist (why?)
                                ACTION_IF (FILE_CONTAINS_EVALUATED(~CLABSH01.2da~ ~GA_%variant%~)) BEGIN
                                   //   PRINT "filename is %variant%"
                                      COPY_EXISTING ~pr_full.tpa~ ~override~
                                          REPLACE_TEXTUALLY "~%variant%~ => ~druid~" "~%variant%~ => ~shaman~"
                                          REPLACE_TEXTUALLY "~%variant%~ => ~general~" "~%variant%~ => ~shaman~"
                                          REPLACE_TEXTUALLY "~%variant%~ => ~cleric~" "~%variant%~ => ~shaman~"
                                END
                            END  //inner action
                            INNER_ACTION BEGIN
	                         COPY_EXISTING kitlist.2da override
		                 READ_2DA_ENTRIES_NOW kitlist 3
		                 FOR (row = 3; row < kitlist; ++row) BEGIN // Skip past the vanilla kits
			             READ_2DA_ENTRY_FORMER kitlist row 1 label
			             READ_2DA_ENTRY_FORMER kitlist row 5 clab
			             READ_2DA_ENTRY_FORMER kitlist row 8 class
			             PATCH_IF class = 11 OR   // druid
                                              class = 6  OR   //paladin   
                                              class = 12 OR   //ranger
                                              class = 3  OR   //cleric
                                              class = 21 BEGIN //shaman
			                  PATCH_IF (FILE_CONTAINS_EVALUATED(~%clab%.2da~ ~GA_%variant%~)) BEGIN
                                           //   PATCH_PRINT "clab is %clab%.2da. What is %variant%? What is the %label%?"
                                                INNER_PATCH_SAVE clab_n ~%clab%~ BEGIN  END
                                                INNER_PATCH_SAVE kit_n ~%label%~ BEGIN  END
                                                INNER_ACTION BEGIN
                                                     COPY_EXISTING ~pr_full.tpa~ ~override~
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~druid~" "~%variant%~ => ~%label%~"
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~general~" "~%variant%~ => ~%label%~"
                                                         REPLACE_TEXTUALLY "~%variant%~ => ~cleric~" "~%variant%~ => ~%label%~"
                                                END//inner action
                                          END
			             END
                                 END //for loop
                            END//inner action end
                   END //
         END //non-empty name
     END //priest type
    END //valid file
    BUT_ONLY

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// exclude scrolls that already exist


COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~ //copies all itm files
    PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
    READ_BYTE 0x001C type //Item type
        PATCH_IF (type = 0x000b) BEGIN  //if scroll type
        //check if casts spell from scroll list.  If so, place in 'no' category
        //add these scrolls for placement
		READ_LONG  0x64 "abil_off" ELSE 0
  		READ_SHORT 0x68 "abil_num" ELSE 0
		READ_LONG  0x6a "fx_off"   ELSE 0
  		FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
    		READ_BYTE ("%abil_off%" + (0x38 * "%index%")) "type"
			PATCH_IF ("%type%" = 3) BEGIN // magical
      			READ_SHORT ("%abil_off%" + 0x1e + (0x38 * "%index%")) "abil_fx_num"
      			READ_SHORT ("%abil_off%" + 0x20 + (0x38 * "%index%")) "abil_fx_idx"
      			FOR (index2 = 0 ; index2 < abil_fx_num ; index2 = index2 + 1) BEGIN
        			READ_SHORT ("%fx_off%" +        (0x30 * ("%abil_fx_idx%" + "%index2%"))) "opcode"
        			PATCH_IF (("%opcode%" = 146) OR ("%opcode%" = 148)) BEGIN // cast spell
        			     READ_ASCII ("%fx_off%" + 0x14 + (0x30 * ("%abil_fx_idx%" + "%index2%"))) "resource"
        			     //PATCH_PRINT "%resource%"
                                     INNER_PATCH_SAVE da_spl ~%resource%~ BEGIN  END
                                     INNER_PATCH_SAVE da_scr ~%SOURCE_RES%~ BEGIN  END
                                     INNER_ACTION BEGIN
                                         ACTION_IF (FILE_CONTAINS_EVALUATED(~pr_full.tpa~ ~%da_spl%~))  BEGIN
                                             // PRINT "%resource%"
                                                   COPY_EXISTING ~pr_full.tpa~ ~override~
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~druid~" "~%da_spl%~ => ~no~"
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~general~" "~%da_spl%~ => ~no~"
                                                       REPLACE_TEXTUALLY "~%da_spl%~ => ~cleric~" "~%da_spl%~ => ~no~"
		                                   COPY_EXISTING ~pr_scrol.tpa~ ~override~
		                                       REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%da_spl%~ => ~%da_scr%~"
		                                   INNER_PATCH_SAVE d_scr ~%da_scr%~ BEGIN  END
                                                   INNER_ACTION BEGIN  //now get level
                                                   COPY_EXISTING ~%da_spl%.SPL~ ~override~
                                                       PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
                                                       READ_LONG  0x0034 level //spell level
                                                           INNER_PATCH_SAVE d_level ~%level%~ BEGIN  END
                                                              INNER_ACTION BEGIN
                                                                   COPY_EXISTING ~scrl_lv.tpa~ ~override~
		                                                   REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%d_scr%~ => ~%d_level%~"
                                                              END
		                                      END  //patch if
		                                      BUT_ONLY
                                                   END
                                         END //action if file contains
                                     END //inner action
        			END //opcode check
      			END //for loop
      			END //magical
		END//for loop
        END
    END
    BUT_ONLY

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Actually create scrolls

//base list
INCLUDE ~override/pr_full.tpa~  //

//part 1
ACTION_PHP_EACH pr_full_list AS scr_spl => status BEGIN
 ACTION_IF !("%status%" STRING_EQUAL "no") BEGIN
 //PRINT ~%scr_spl% is spell file name; %status% is status.~
   COPY_EXISTING ~%scr_spl%.SPL~ ~override~
     PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
      //       PATCH_IF ("%status%" STRING_EQUAL "general") BEGIN  //general scrolls (no checks for fnP needed--should be legit universal)
             READ_LONG  0x0034 level //spell level
             READ_LONG  0x0008 name //spell name
             READ_STRREF 0x0008 s_name
	     READ_LONG  0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
               INNER_PATCH_SAVE d_level ~%level%~ BEGIN  END
               INNER_PATCH_SAVE da_spll ~%scr_spl%~ BEGIN  END
               INNER_PATCH_SAVE spellicon ~%SOURCE_RES%~ BEGIN  END
               INNER_PATCH_SAVE da_status ~%status%~ BEGIN  END
               INNER_PATCH_SAVE scroll_ref ~%SOURCE_RES%~ BEGIN
                 REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~SP~ ~B_~
                   // PATCH_PRINT "What does %scroll_ref% say?"
                 END  //now, create spell to scroll list for later use, as well as scroll to level
                 INNER_ACTION BEGIN
		      COPY_EXISTING ~pr_scrol.tpa~ ~override~
		          REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%da_spll%~ => ~%scroll_ref%~"
                      COPY_EXISTING ~scrl_lv.tpa~ ~override~
		          REPLACE_TEXTUALLY "BEGIN" "BEGIN
~%scroll_ref%~ => ~%d_level%~"
                 END
                 /*
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%clock%.ITM~   //Level 1 universal as generic.  usable by all druid/clerics etc.
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                    
                 */
      //    END// general spell types
     END
     BUT_ONLY
 END //if
END

//part 2

//spell to scroll list
INCLUDE ~override/pr_scrol.tpa~  //   pr_scr

ACTION_PHP_EACH pr_full_list AS scr_spl => status BEGIN
  ACTION_PHP_EACH pr_scr AS spl => scr BEGIN
   ACTION_IF !("%status%" STRING_EQUAL "no") BEGIN
     ACTION_IF ("%scr_spl%" STRING_EQUAL "%spl%") BEGIN
   COPY_EXISTING ~%scr_spl%.SPL~ ~override~
     PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
             READ_LONG  0x0008 name //spell name
             READ_STRREF 0x0008 s_name
             READ_LONG  0x0034 level //spell level
	     READ_LONG  0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
               INNER_PATCH_SAVE spellicon ~%SOURCE_RES%~ BEGIN  END
                 PATCH_IF ("%status%" STRING_EQUAL "general") BEGIN
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid/clerics etc.
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                 END//general
                 ELSE PATCH_IF ("%status%" STRING_EQUAL "druid") BEGIN  //druid spells (prob need special checks for fnp...)
                 //fnp check here probably
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_dr102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                 END//druid
                 ELSE PATCH_IF ("%status%" STRING_EQUAL "cleric") BEGIN  //cleric spells (prob need special checks for fnp...)
                 //fnp check here probably
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_cl102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all cleric
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                 END//cleric
                 ELSE PATCH_IF ("%status%" STRING_EQUAL "shaman") BEGIN  //druid spells (prob need special checks for fnp...)
                 //fnp check here probably
                    INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_dr102.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                    END //end inner action
                 END//shaman
                 ELSE BEGIN //for kit specific spells
                   INNER_ACTION BEGIN
                    COPY ~%folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid/clerics etc.
                        WRITE_LONG 0x0008 ~%name%~
                        WRITE_LONG 0x000c ~%name%~
                        WRITE_LONG 0x0054 ~%desc%~
                        WRITE_SHORT 0x007E target //Target-check
                        WRITE_SHORT 0x0080 range //range-check
                        WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                        WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                        WRITE_LONG 0x0034 (level * 100)       //cost
                        LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END   
                        INNER_ACTION BEGIN
	                         COPY_EXISTING kitlist.2da override
		                 READ_2DA_ENTRIES_NOW kitlist 3
		                 FOR (row = 3; row < kitlist; ++row) BEGIN // Skip past the vanilla kits
			             READ_2DA_ENTRY_FORMER kitlist row 1 label
			             READ_2DA_ENTRY_FORMER kitlist row 5 clab
			             READ_2DA_ENTRY_FORMER kitlist row 8 class
			                  PATCH_IF ("%label%" STRING_EQUAL "%status%") BEGIN
                                          PATCH_PRINT "%label% and %clab% and %spl% and %scr%"
                                              PATCH_IF class = 3 BEGIN  //cleric class
                                                  // PATCH_PRINT "cleric"
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_CL001.itm.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                                                             //CONTINUE EXCLUSIVE TO KIT
                                                        END //end inner action
                                              END  //if cleric
                                              PATCH_IF class = 6 BEGIN  //pally class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_PA001.itm.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                                                             //CONTINUE EXCLUSIVE TO KIT
                                                        END //end inner action
                                              END  //if pally
                                              PATCH_IF class = 11 BEGIN  //druid class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_DR001.itm.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                                                             //CONTINUE EXCLUSIVE TO KIT
                                                        END //end inner action
                                              END  //if druid
                                              PATCH_IF class = 12 BEGIN  //ranger class
                                                        INNER_ACTION BEGIN
                                                        COPY ~%folder%/data/scrolls/priest_1/B_RA001.itm.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                                                             //CONTINUE EXCLUSIVE TO KIT
                                                        END //end inner action
                                              END  //if ranger
                                              PATCH_IF class = 21 BEGIN  //shaman class
                                                        COPY ~%folder%/data/scrolls/priest_1/B_DR001.itm.itm~ ~override/%scr%.ITM~   //Level 1 universal as generic.  usable by all druid (but limit it to shaman)
                                                             WRITE_LONG 0x0008 ~%name%~
                                                             WRITE_LONG 0x000c ~%name%~
                                                             WRITE_LONG 0x0054 ~%desc%~
                                                             WRITE_SHORT 0x007E target //Target-check
                                                             WRITE_SHORT 0x0080 range //range-check
                                                             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
                                                             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
                                                             WRITE_LONG 0x0034 (level * 100)       //cost
                                                             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%da_spll%~ END
                                                             //CONTINUE EXCLUSIVE TO KIT
                                                        END //end inner action
                                              END  //if cleric
                                          END
                                 END //for loop
                                 BUT_ONLY
                        END
                   END//inner action
                 END//kit specific spells
      //PATCH_PRINT "test %name% %s_name% %desc% %target% %range%"
      END  //check
      BUT_ONLY
     END
   END // Not no
  END
END    // spell to status

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// missing Scroll bams

//check if certain engine specific bams are not in game.  Copy over if not
//do php re spell to scroll
//check if %spellname%a.bam exists in game
//if not, copy over suitable substitue

//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////// Scroll placement

//scroll to level list
INCLUDE ~override/scrl_lv.tpa~  //


