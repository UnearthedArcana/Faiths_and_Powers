
//__________________________________________________________________________________
//__________________________________________________________________________________
//
//							F&P ITEM USABILITY
//__________________________________________________________________________________
//__________________________________________________________________________________

DEFINE_ACTION_FUNCTION change_usability BEGIN

//copy marker file___________________________________________________________________
//
COPY ~faiths_and_powers/lib/markers/d5_marker.d5~ ~override/d5__fnp_usability.d5~ 
//___________________________________________________________________________________

//check config settings______________________________________________________________
//
LAM d5_fnp_weapon_usability
//___________________________________________________________________________________

//first, fix category 44_____________________________________________________________
//
COPY_EXISTING ~itemtype.2da~ ~override~
  SET_2DA_ENTRY 44 3 4 35
BUT_ONLY
//___________________________________________________________________________________

/*
// NOTES:

armor:
- talos flag 			= any armor			= 0x01000000
- helm flag 			= leather + chain	= 0x02000000
- lathander flag		= leather only		= 0x04000000

what about druids? 
- totemic flag			= druid, no plate/chain	= 0x08000000
- shapeshifter flag		= mystic
- avenger/beast_friend	= occultist

./ if not usable by clerics, then restrict from all cleric kits

./ if usable by druids, make usable by all multi cleric classes

./ if not usable by druids, then restrict from totemic

./ make all weapons usable by all classes 

./ make all armor usable by:
	- clerics
	- fighter/clerics
	- cleric/thieves
	- cleric/mages
	- ranger/clerics
	- (in fact, all divine classes)

./ make plate mail unusable by helm, lathander, totemic, shapeshifter

./ make chain mail unusable by lathander, totemic, shapeshifter

./ change maces' item type to morning star/22

./ deal with swords (change long swords & scimitars to small sword/19?)

higher types to work with: 
- 57 = greatswords
- 69 = bastard swords
- 51 = rods (?)
- 44 = clubs

changes: 
- Change clubs from #17 to #26 "quarterstaves." Now clubs can have different usability from maces.
- Change halberds from #30 to #57 "bastard swords." That frees up a 1-handed slot.
- Change spears from #29 to #44 "clubs." Now two 1-handed slots are freed up.
- If IR is not installed, change morning stars to #23 "flails," to match their proficiency.
- If IR is installed, change morning stars to #17 "maces," to match their proficiency. Now three 1-handed slots are freed up.
- Change 2-hand swords from "large swords" to #57 "greatswords."
- Short swords stay as "small swords."
- Long swords stay as "large swords."
- Change bastard swords to #22 "morning star."
- Change scimitar to #29 "spear."
- Change katana to #30 "halberd."

./ check variables:
	- if plate = 1 -> assign talos
	- if plate = 0 then:
	 -- if chain = 1 -> assign helm
	 -- if chain = 0 -> assign lathander
	- if large blades = 0 -> 181 vs. large swords and halberds
	- if medium blades = 0 -> 181 vs. small swords
	- if blunt = 0 -> 181 vs. maces, morning stars, hammers, flails
	- if bows = 0 -> 181 vs. bows and arrows
	- if xbows = 0 -> 181 vs. xbows and bolts

./ and patch weapprof also!

./ give SC druids the totemic flag

./ give multi druids the totemic flag

./ give mystics the shapeshifter flag

./ give occultists the beast_friend flag??

make 'natural' plate/chain usable by totemic (static list?)

./ apply 181 vs. armor to beast lord (vanilla shapeshifter)

what about shields??

*/ 


//priest bonuses____________________________________________________________________
//
COPY ~faiths_and_powers/data/misc/b_lor.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp1.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp2.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp3.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp4.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp5.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp6.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
COPY ~faiths_and_powers/data/misc/b_sp7.spl~ ~override~
	SAY NAME1 @6
	SAY UNIDENTIFIED_DESC @6
//___________________________________________________________________________________


/*
//priests extra spells_____________________________________________________________
//
ACTION_PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
  ACTION_IF (~%class%~ STRING_EQUAL_CASE ~PRIEST~) BEGIN
    COPY_EXISTING ~%kit%.2da~ ~override~
	  LPM remove_blank_lines
	  APPEND_FILE ~faiths_and_powers/data/misc/morespells.txt~
	BUT_ONLY
  END
END
//___________________________________________________________________________________
*/


// vv THIS IS OVERBROAD vv ... restrict to weapons?? yes.
//apply cleric restrictions to kits__________________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	READ_SHORT   0x1c type
	READ_BYTE    0x1e class_1   										// cleric class usability
	READ_BYTE    0x29 kits												// cleric kit flags
	PATCH_IF /* (%type% = 2) OR   	//armor */
	  		(%type% = 5) OR   	//arrow
			(%type% = 15) OR  	//bow
			(%type% = 16) OR  	//dagger
			(%type% = 18) OR  	//slings
			(%type% = 14) OR  	//bullet
			(%type% = 19) OR  	//small swords
			(%type% = 20) OR  	//large swords
			(%type% = 25) OR  	//axe
			(%type% = 21) OR  	//hammer
			(%type% = 17) OR  	//mace
			(%type% = 22) OR  	//morningstars
			(%type% = 23) OR  	//flails
			(%type% = 24) OR  	//darts
			(%type% = 26) OR  	//quarterstaff
			(%type% = 27) OR  	//crossbows
			(%type% = 31) OR  	//bolts
			(%type% = 28) OR  	//hand-to-hand
			(%type% = 29) OR  	//spear
			(%type% = 57) OR  	//greatswords
			(%type% = 69) OR  	//bastard swords
			(%type% = 30) OR  	//halberds
			(%type% = 44) BEGIN  //clubs
	  PATCH_IF ((%class_1% BAND 0b10000000) = 0b10000000) BEGIN 		// if *NOT usable* by clerics
		WRITE_BYTE 0x29 (%kits% BOR 0b00000111) 						// set same flag for all cleric kits
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//usable by druid = usable by multi clerics; & no 319 effects_______________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_BYTE 0x1f class_2  											// cleric multi usability
	READ_BYTE 0x21 class_4  											// druid class usability
	READ_BYTE 0x29 kits													// kit flags
	PATCH_IF ((%class_4% BOR 0b10111111) = 0b10111111) BEGIN 			// if *IS usable* by druids
	  WRITE_BYTE 0x1f (%class_2% BAND 0b00111000) 						// make usable by multi clerics
	  WRITE_BYTE 0x29 (%kits% BAND 0b11110111) 							// make usable by totemic
	  LPF DELETE_EFFECT INT_VAR match_opcode = 319 match_parameter1 = 11 match_timing = 2 END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

/*
//give druid class usability to new druids__________________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT   0x1c type
	READ_BYTE 	0x1f class_2 											// fighter-ranger class usability
	READ_BYTE 	0x20 class_3 											// mage-thief class usability
	READ_BYTE 	0x21 class_4 											// druid class usability
	READ_BYTE 	0x29 d_kits												// druid kit flags
	PATCH_IF (%type% = 
	PATCH_IF ((%class_4% BAND 0b01000000) = 0b01000000) BEGIN 			// if *NOT* usable by druids
	  WRITE_BYTE 0x29 (%d_kits% BOR 0b00001000) 						// same same flag for totemic
	END
  END	
BUT_ONLY
//__________________________________________________________________________________
*/

//give fighter weapon usability to cleric class_____________________________________
//
COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_BYTE 	 0x1f fighter 											// fighter usability flag
	READ_BYTE    0x1e class_1
	READ_BYTE    0x1f class_2
	READ_BYTE    0x20 class_3
	READ_BYTE    0x21 class_4
	READ_BYTE    0x29 kits
	READ_SHORT   0x1c type
	PATCH_IF (%type% = 5) OR   	//arrow
			(%type% = 15) OR  	//bow
			(%type% = 16) OR  	//dagger
			(%type% = 18) OR  	//slings
			(%type% = 14) OR  	//bullet
			(%type% = 19) OR  	//small swords
			(%type% = 20) OR  	//large swords
			(%type% = 25) OR  	//axe
			(%type% = 21) OR  	//hammer
			(%type% = 17) OR  	//mace
			(%type% = 22) OR  	//morningstars
			(%type% = 23) OR  	//flails
			(%type% = 24) OR  	//darts
			(%type% = 26) OR  	//quarterstaff
			(%type% = 27) OR  	//crossbows
			(%type% = 31) OR  	//bolts
			(%type% = 28) OR  	//hand-to-hand
			(%type% = 29) OR  	//spear
			(%type% = 57) OR  	//greatswords
			(%type% = 69) OR  	//bastard swords
			(%type% = 30) OR  	//halberds
			(%type% = 44) BEGIN  //clubs
//	  PATCH_IF ((%class_4% BAND 0b01000000) = 0b01000000) BEGIN 		// if *NOT* usable by druids
//		WRITE_BYTE 0x29 (%kits% BOR 0b00001000) 						// same same flag for totemic
//	  END
	  PATCH_IF ((%class_2% BAND 0b00100000) = 0b00000000) BEGIN 		// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
		WRITE_BYTE  0x1e (%class_1% BAND 0b01111111) 					// make usable by clerics
		WRITE_BYTE  0x1f (%class_2% BAND 0b00101000) 					// make usable by divine multiclasses
		WRITE_BYTE  0x20 (%class_3% BAND 0b11001111) 					// make usable by rangers/paladins
		WRITE_BYTE  0x21 (%class_4% BAND 0b10111111) 					// make usable by druids
		WRITE_BYTE  0x29 (%kits% BAND 0b11000000) 						// make usable by priest kits
	  END
    END
  END
BUT_ONLY
ACTION_FOR_EACH quiv IN ~1~ ~2~ ~3~ ~4~ ~5~ ~6~ BEGIN
  COPY_EXISTING ~quiver0%quiv%.itm~ ~override~
	READ_BYTE 	 0x1f fighter 											// fighter usability flag
	READ_BYTE    0x1e class_1
	READ_BYTE    0x1f class_2
	READ_BYTE    0x20 class_3
	READ_BYTE    0x21 class_4
	READ_BYTE    0x29 kits
//	PATCH_IF ((%class_2% BAND 0b00100000) = 0b00000000) BEGIN 			// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
	  WRITE_BYTE  0x1e (%class_1% BAND 0b01111111) 						// make usable by clerics
	  WRITE_BYTE  0x1f (%class_2% BAND 0b00101000) 						// make usable by divine multiclasses
	  WRITE_BYTE  0x20 (%class_3% BAND 0b11001111) 						// make usable by rangers/paladins
	  WRITE_BYTE  0x21 (%class_4% BAND 0b10111111) 						// make usable by druids
	  WRITE_BYTE  0x29 (%kits% BAND 0b11000000) 						// make usable by cleric kits
//	END
  IF_EXISTS BUT_ONLY
END
//__________________________________________________________________________________

ACTION_IF (simpler_usability_changes = 0) BEGIN

//set armor usability for cleric kits_______________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT 	0x1c type
	READ_BYTE   0x1e class_1
	READ_BYTE 	0x1f class_2
	READ_BYTE 	0x21 class_4  											// druid class usability
	READ_BYTE 	0x29 kits
	PATCH_IF (type = 2) BEGIN
	  READ_LONG 0x22 appearance
	  PATCH_IF (appearance = 16690) OR (appearance = 16691) OR (appearance = 16692) BEGIN
	    PATCH_IF ((%class_2% BAND 0b00001000) = 0b00000000) BEGIN 		// if *IS usable* by fighters
		  WRITE_BYTE 0x29 (%kits% BAND 0b11001000) 						// make usable by divine kits
	    END
	    PATCH_IF ((%class_2% BAND 0b00100000) = 0b00000000) BEGIN 		// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
		  WRITE_BYTE  0x1e (%class_1% BAND 0b01111111) 					// make usable by clerics
		  WRITE_BYTE  0x1f (%class_2% BAND 0b00111000) 					// make usable by cleric multiclasses
	    END
	  END
//	  PATCH_IF (appearance = 16690) BEGIN 								// leather appearance
//		WRITE_BYTE 0x29 (%kits% BAND 0b11101111) 						// make usable by shapeshifter
//	  END
	  PATCH_IF (appearance = 16691) BEGIN 								// chain appearance
		WRITE_BYTE 0x29 (%kits% BOR 0b00110100) 						// restrict from lathander + shapeshifter + avenger
	  END
	  ELSE PATCH_IF (appearance = 16692) BEGIN 							// plate appearance
		WRITE_BYTE 0x29 (%kits% BOR 0b00110100) 						// restrict from lat + helm + shapeshifter + avenger
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

END // end .ini setting check

//set armor usability for druid kits________________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT 	0x1c type
	READ_BYTE 	0x1f class_2
	READ_BYTE 	0x21 class_4  											// druid class usability
	READ_BYTE 	0x29 kits
	PATCH_IF (type = 2) BEGIN
	  PATCH_IF ((%class_2% BAND 0b00001000) = 0b00000000) BEGIN 		// if *IS usable* by fighters
		WRITE_BYTE 0x29 (%kits% BAND 0b11110111) 						// make usable by totemic
	  END
	  READ_LONG 0x22 appearance
	  PATCH_IF (appearance = 16691) AND ((%class_4% BAND 0b01000000) = 0b01000000) BEGIN 	// chain appearance
		WRITE_BYTE 0x29 (%kits% BOR 0b00001000) 						// restrict from totemic 
	  END
	  ELSE PATCH_IF (appearance = 16692) AND ((%class_4% BAND 0b01000000) = 0b01000000) BEGIN 	// plate appearance
		WRITE_BYTE 0x29 (%kits% BOR 0b00001000) 						// restrict from totemic
	  END
	  PATCH_IF ((%class_2% BAND 0b00100000) = 0b00000000) BEGIN 		// if *IS usable* by fighter/mages (excluding scrolls and wands for now)
		WRITE_BYTE  0x21 (%class_4% BAND 0b10111111) 					// make usable by druids
		WRITE_BYTE  0x1f (%class_2% BAND 0b11101111) 					// make usable by druid multiclasses
	  END
	END
  END
BUT_ONLY

//__________________________________________________________________________________

ACTION_IF (simpler_usability_changes = 0) BEGIN

//set weapon item types_____________________________________________________________
//
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_SHORT 0x1c type
	PATCH_IF (%type% = 22) BEGIN									// if type = morning star
	  PATCH_IF (MOD_IS_INSTALLED ~item_rev.tp2~ ~17~) BEGIN			// if IR weapon changes installed
		WRITE_SHORT 0x1c 17											// change to type = maces
	  END
	  PATCH_IF !(MOD_IS_INSTALLED ~item_rev.tp2~ ~17~) BEGIN		// if no IR weapon changes
		WRITE_SHORT 0x1c 23											// change to type = flails
	  END
	END
  END
BUT_ONLY

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
	READ_BYTE 0x31 prof
	PATCH_IF (%prof% = 115) BEGIN									// proficiency = club
	  WRITE_SHORT 0x1c 26											// change to type = staff
	END
	PATCH_IF (%prof% = 99) BEGIN									// proficiency = halberd
	  WRITE_SHORT 0x1c 69											// change to type = bastard swords
	END
	PATCH_IF (%prof% = 98) BEGIN									// proficiency = spear
	  WRITE_SHORT 0x1c 44											// change to type = clubs
	END
	PATCH_IF (%prof% = 93) BEGIN									// proficiency = 2-hand sword
	  WRITE_SHORT 0x1c 57											// change to type = greatswords
	END
	PATCH_IF (%prof% = 89) BEGIN									// proficiency = bastard sword
	  WRITE_SHORT 0x1c 22											// change to type = morning stars
	END
	PATCH_IF (%prof% = 95) BEGIN									// proficiency = scimitar
	  WRITE_SHORT 0x1c 29											// change to type = spears
	END
	PATCH_IF (%prof% = 94) BEGIN									// proficiency = katana
	  WRITE_SHORT 0x1c 30											// change to type = halberds
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//sanity check for morning stars____________________________________________________
//
COPY_EXISTING ~blun04.itm~ ~override~
  READ_SHORT 0x1c mace_type
  READ_SHORT 0x31 mace_prof

COPY_EXISTING ~blun02.itm~ ~override~
  READ_SHORT 0x1c flail_type
  READ_SHORT 0x31 flail_prof

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (%SOURCE_SIZE% > 0x71) BEGIN
  READ_SHORT 0x1c type
  READ_SHORT 0x31 prof
    PATCH_IF (%prof% = %mace_prof%) BEGIN                       	// prof = maces
      PATCH_IF (%type% = %flail_type%) BEGIN						// type = flails
		WRITE_SHORT 0x1c %mace_type%								// change to type = maces
	  END
	END
    PATCH_IF (%prof% = %flail_prof%) BEGIN                       	// prof = flails
      PATCH_IF (%type% = %mace_type%) BEGIN							// type = maces
		WRITE_SHORT 0x1c %flail_type%								// change to type = flails
	  END
	END
  END
BUT_ONLY
//__________________________________________________________________________________

//Update all stores to accept new itemtypes_________________________________________
//
COPY_EXISTING_REGEXP	~.*\.sto~	override
	READ_SHORT	0x8	type
	READ_LONG	0x2c	buy_off
	READ_LONG	0x30	buy_num
	SET	buy_add = 0	//	Number of categories to add, to update offsets
	SET	add_category = 0	//	Initialize check variable
	FOR	(i = 0; i < 3; ++i)	BEGIN	SET $add_category(~%i%~) = 1	END	//	Initialize check variable
	FOR	(i = 0; i < buy_num; ++i)	BEGIN
		READ_BYTE	(buy_off + i * 0x4)	category
		PATCH_MATCH	category WITH
			15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 WHEN add_category = 0	BEGIN	// Match any Weapon Categories
				++add_category
			END
			69	BEGIN	//	Match "Bastard Sword" Category - No Unnecessary Duplication
				SET add_category_0 = 0
			END
			57	BEGIN	//	Match "Greatsword" Category - No Unnecessary Duplication
				SET add_category_1 = 0
			END
			44	BEGIN	//	Match "Club" Category - No Unnecessary Duplication
				SET add_category_2 = 0
			END
			DEFAULT
		END
	END
	//	Add categories
	PATCH_IF	add_category	BEGIN
		PATCH_IF	add_category_0	BEGIN
			INSERT_BYTES	(buy_off + buy_num * 0x4)	0x4
			WRITE_BYTE	(buy_off + buy_num * 0x4)	69
			++buy_add
		END
		PATCH_IF	add_category_1	BEGIN
			INSERT_BYTES	(buy_off + buy_num * 0x4)	0x4
			WRITE_BYTE	(buy_off + buy_num * 0x4)	57
			++buy_add
		END
		PATCH_IF	add_category_2	BEGIN	
			INSERT_BYTES	(buy_off + buy_num * 0x4)	0x4
			WRITE_BYTE	(buy_off + buy_num * 0x4)	44
			++buy_add
		END
		//	Update offsets
		WRITE_LONG  0x30    (THIS + buy_add)
		READ_LONG	0x34	items_off
		PATCH_IF	items_off >= buy_off	BEGIN	
			WRITE_LONG  0x34    (THIS + (buy_add * 0x04))
		END
		READ_LONG	0x4c	drink_off
		PATCH_IF	drink_off >= buy_off	BEGIN
			WRITE_LONG  0x4c    (THIS + (buy_add * 0x04))
		END
		READ_LONG	0x70	cures_off
		PATCH_IF	cures_off >= buy_off	BEGIN
			WRITE_LONG  0x70    (THIS + (buy_add * 0x04))
		END
	END
BUT_ONLY
//__________________________________________________________________________________

END // end .ini setting check

END // end item changes function


//__________________________________________________________________________________
//__________________________________________________________________________________


DEFINE_ACTION_FUNCTION apply_usability BEGIN

//check config settings______________________________________________________________
//
LAM d5_fnp_weapon_usability
//___________________________________________________________________________________

//apply armor and weapon variables__________________________________________________
//
OUTER_TEXT_SPRINT hex_talos 		~01000000~ // plate/any armor
OUTER_TEXT_SPRINT hex_helm 			~02000000~ // chainmail max
OUTER_TEXT_SPRINT hex_lat 			~04000000~ // leather only
OUTER_TEXT_SPRINT hex_totemic 		~08000000~
OUTER_TEXT_SPRINT hex_shapeshifter 	~10000000~
OUTER_TEXT_SPRINT hex_avenger		~20000000~

COPY_EXISTING ~d5_usabl.2da~ ~override~
  COUNT_2DA_COLS num_cols
  READ_2DA_ENTRIES_NOW ~r2en_d5_usable~ (num_cols - 1)
  FOR (row = 1; row < r2en_d5_usable; row += 1) BEGIN
	READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ row 0 kit
	FOR (col = 0; col < (num_cols - 1); col += 1) BEGIN
	  READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ 0 col usable
	  READ_2DA_ENTRY_FORMER ~r2en_d5_usable~ row (col + 1) access
	  TEXT_SPRINT $d5_fnp_kit_use_access(~%kit%~ ~%usable%~) ~%access%~
	END
  END
BUT_ONLY

ACTION_PHP_EACH d5_fnp_kit_use_access AS clab => val BEGIN
 ACTION_IF (simpler_usability_changes = 0) BEGIN
  ACTION_IF (~%clab_1%~ STRING_EQUAL_CASE ~CHAIN_ARMOR~) BEGIN
	ACTION_IF (%val% = 1) BEGIN
	  PRINT ~    %clab% : %clab_1% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%clab%~) BEGIN
			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_helm%~
			END
		  END
		END
	  BUT_ONLY
	END
	ACTION_IF (%val% = 0) BEGIN
	  PRINT ~    %clab% : %clab_1% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%clab%~) && NOT (~%kit_clab%~ STRING_EQUAL_CASE ~d5fsorc~) && NOT (~%kit_clab%~ STRING_EQUAL_CASE ~d5rsorc~) && NOT (~%kit_clab%~ STRING_EQUAL_CASE ~d5tsorc~) BEGIN
// (exclude multi sorcerers from this)
			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_lat%~
			END
		  END
		END
	  BUT_ONLY
	END
  END
  ACTION_IF (~%clab_1%~ STRING_EQUAL_CASE ~PLATE_ARMOR~) BEGIN
	ACTION_IF (%val% = 1) BEGIN
	  PRINT ~    %clab% : %clab_1% : %val%~
	  COPY_EXISTING ~kitlist.2da~ ~override~
//		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
		FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
		  READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
		  PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~%clab%~) BEGIN
			PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
			  SET_2DA_ENTRY row 7 10 ~0x%hex_talos%~
			END
		  END
		END
	  BUT_ONLY
	END
  END
 END
END

COPY_EXISTING ~weapprof.2da~ ~override~
  COUNT_2DA_COLS cols
  COUNT_2DA_ROWS cols rows
  FOR (row = 7; row < rows; ++row) BEGIN
    READ_2DA_ENTRY row 1 cols stat
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~89~) BEGIN
      READ_2DA_ENTRY row 2 cols bswo_strref
      GET_STRREF %bswo_strref% bswo_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~90~) BEGIN
      READ_2DA_ENTRY row 2 cols lswo_strref
      GET_STRREF %lswo_strref% lswo_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~91~) BEGIN
      READ_2DA_ENTRY row 2 cols sswo_strref
      GET_STRREF %sswo_strref% sswo_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~92~) BEGIN
      READ_2DA_ENTRY row 2 cols baxe_strref
      GET_STRREF %baxe_strref% baxe_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~93~) BEGIN
      READ_2DA_ENTRY row 2 cols 2swo_strref
      GET_STRREF %2swo_strref% 2swo_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~94~) BEGIN
      READ_2DA_ENTRY row 2 cols kata_strref
      GET_STRREF %kata_strref% kata_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~95~) BEGIN
      READ_2DA_ENTRY row 2 cols scim_strref
      GET_STRREF %scim_strref% scim_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~96~) BEGIN
      READ_2DA_ENTRY row 2 cols dagg_strref
      GET_STRREF %dagg_strref% dagg_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~97~) BEGIN
      READ_2DA_ENTRY row 2 cols hamm_strref
      GET_STRREF %hamm_strref% hamm_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~98~) BEGIN
      READ_2DA_ENTRY row 2 cols spea_strref
      GET_STRREF %spea_strref% spea_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~99~) BEGIN
      READ_2DA_ENTRY row 2 cols halb_strref
      GET_STRREF %halb_strref% halb_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~100~) BEGIN
      READ_2DA_ENTRY row 2 cols flai_strref
      GET_STRREF %flai_strref% flai_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~101~) BEGIN
      READ_2DA_ENTRY row 2 cols mace_strref
      GET_STRREF %mace_strref% mace_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~102~) BEGIN
      READ_2DA_ENTRY row 2 cols staf_strref
      GET_STRREF %staf_strref% staf_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~103~) BEGIN
      READ_2DA_ENTRY row 2 cols xbow_strref
      GET_STRREF %xbow_strref% xbow_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~104~) BEGIN
      READ_2DA_ENTRY row 2 cols lbow_strref
      GET_STRREF %lbow_strref% lbow_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~105~) BEGIN
      READ_2DA_ENTRY row 2 cols sbow_strref
      GET_STRREF %sbow_strref% sbow_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~106~) BEGIN
      READ_2DA_ENTRY row 2 cols dart_strref
      GET_STRREF %sbow_strref% dart_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~107~) BEGIN
      READ_2DA_ENTRY row 2 cols slin_strref
      GET_STRREF %slin_strref% slin_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~111~) BEGIN
      READ_2DA_ENTRY row 2 cols 2hws_strref
      GET_STRREF %2hws_strref% 2hws_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~112~) BEGIN
      READ_2DA_ENTRY row 2 cols snss_strref
      GET_STRREF %snss_strref% snss_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~113~) BEGIN
      READ_2DA_ENTRY row 2 cols swss_strref
      GET_STRREF %swss_strref% swss_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~114~) BEGIN
      READ_2DA_ENTRY row 2 cols twfs_strref
      GET_STRREF %twfs_strref% twfs_text
    END
    PATCH_IF (~%stat%~ STRING_EQUAL_CASE ~115~) BEGIN
      READ_2DA_ENTRY row 2 cols club_strref
      GET_STRREF %club_strref% club_text
    END
  END
BUT_ONLY  

OUTER_SPRINT base_weapon_use @1110

COPY_EXISTING ~kitlist.2da~ ~override~
//  COUNT_2DA_COLS cols
  READ_2DA_ENTRIES_NOW ~r2en_kitlist~ 10
  FOR (row = 3; row < r2en_kitlist; row += 1) BEGIN
   SPRINT these_weapon_use ~~
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 0 kit_index
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 1 kit_label
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 4 kit_desc
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 5 kit_clab
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 8 kit_class
   READ_2DA_ENTRY_FORMER ~r2en_kitlist~ row 9 kit_code
   PATCH_IF (%kit_class% = 3 || %kit_class% = 11 || %kit_class% = 21 || %kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
	INNER_ACTION BEGIN
	  COPY ~faiths_and_powers/data/misc/d5fnpuse.spl~ ~override/d5_u%kit_index%.spl~
	END
	PHP_EACH d5_fnp_usable AS usable => ind BEGIN
	  PATCH_IF (VARIABLE_IS_SET $d5_fnp_kit_usable_access(~%kit_clab%~ ~%usable%~)) BEGIN
		SPRINT access $d5_fnp_kit_usable_access(~%kit_clab%~ ~%usable%~)
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CLUB_STAFF~) BEGIN			// club, staff
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 18 (col + 1) 3 %access%						//	club
				  SET_2DA_ENTRY 23 (col + 1) 3 %access%						//	quarterstaff
				END
			  END
			BUT_ONLY
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~MACES~) BEGIN				// maces
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 22 (col + 1) 3 %access%						// mace
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 17 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %mace_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~HAMMERS~) BEGIN				// war hammers
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 17 (col + 1) 3 %access%						// war hammer
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 21 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %hamm_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~FLAILS~) BEGIN				// flails
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 21 (col + 1) 3 %access%						// flail
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 23 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %flai_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~AXES~) BEGIN				// axes
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 12 (col + 1) 3 %access%						// axe
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 25 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %baxe_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~DAGGERS~) BEGIN				// daggers
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 16 (col + 1) 3 %access%						//	dagger
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 16 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %dagg_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SHORT_SWORDS~) BEGIN		// short swords
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 11 (col + 1) 3 %access%						//	short sword
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 19 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %sswo_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~LONG_SWORDS~) BEGIN			// long swords
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 10 (col + 1) 3 %access%						//	long sword
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 20 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %lswo_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BASTARD_SWORDS~) BEGIN		// bastard swords
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 9 (col + 1) 3 %access%						//	bastard sword
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 22 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %bswo_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~2HAND_SWORDS~) BEGIN		// 2-hand swords
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 13 (col + 1) 3 %access%						//	2-hand sword
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 57 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %2swo_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SCIMITARS~) BEGIN			// scimitars
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 15 (col + 1) 3 %access%						//	scimitar
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 29 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %scim_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~KATANAS~) BEGIN				// katanas
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 14 (col + 1) 3 %access%						//	katana
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 30 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %kata_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SPEARS~) BEGIN				// spears
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 19 (col + 1) 3 %access%						//	spear
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 44 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %spea_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~HALBERDS~) BEGIN			// halberds
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 20 (col + 1) 3 %access%						//	halberd
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 69 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %halb_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~DARTS~) BEGIN				// darts
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						//	darts
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 24 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %dart_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~SLINGS~) BEGIN				// slings, bullets
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 28 (col + 1) 3 %access%						//	sling
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 18 parameter2 = 0 timing = 9 END
//				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 14 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %slin_text%
~
		  END
		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~BOWS~) BEGIN				// long bows, short bows, arrows
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 25 (col + 1) 3 %access%						// long bow
				  SET_2DA_ENTRY 26 (col + 1) 3 %access%						// short bow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 15 parameter2 = 0 timing = 9 END
//				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 5 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %lbow_text%
 - %sbow_text%
~
		  END

		END
		PATCH_IF (~%usable%~ STRING_EQUAL_CASE ~CROSSBOWS~) BEGIN			// crossbows, bolts
		  INNER_ACTION BEGIN
			COPY_EXISTING ~weapprof.2da~ override
			  READ_2DA_ENTRIES_NOW weapprof 3
			  COUNT_2DA_COLS cols
			  FOR (col = 0; col < cols - 1; ++col) BEGIN
				READ_2DA_ENTRY_FORMER weapprof 0 col column_name
				PATCH_IF "%column_name%" STRING_EQUAL_CASE "%kit_label%" BEGIN
				  SET_2DA_ENTRY 24 (col + 1) 3 %access%						// crossbow
				END
			  END
			BUT_ONLY
		  END
		  PATCH_IF (access = 0) BEGIN
			INNER_ACTION BEGIN
			  COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 27 parameter2 = 0 timing = 9 END
//				LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 31 parameter2 = 0 timing = 9 END
			  BUT_ONLY
			END
		  END ELSE BEGIN
		    SPRINT these_weapon_use ~%these_weapon_use%~^~ - %xbow_text%
~
		  END
		END
	  END
	  SPRINT kit_weapon_use ~%base_weapon_use%~^~%these_weapon_use%~
    END
//    PATCH_PRINT ~%kit_weapon_use%~
    PATCH_IF (simpler_usability_changes = 0) BEGIN
      GET_STRREF %kit_desc% kit_desc_text
      SPRINT new_kit_desc ~%kit_desc_text%~^~ %kit_weapon_use%~
      SET new_kit_desc_string = RESOLVE_STR_REF (~%new_kit_desc%~)
      SET_2DA_ENTRY row 4 10 new_kit_desc_string
    END
    PATCH_IF (kit_class = 11) || (kit_class = 16) BEGIN
	  PHP_EACH d5_fnp_kit_class_access AS kit => class BEGIN
		PATCH_IF (~%kit%~ STRING_EQUAL_CASE ~%kit_clab%~) BEGIN
		  PATCH_IF (~%class%~ STRING_EQUAL_CASE ~DRUID~) BEGIN
			SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ 
		  END
		  PATCH_IF (~%class%~ STRING_EQUAL_CASE ~MYSTIC~) BEGIN
			SET_2DA_ENTRY row 7 10 ~0x%hex_shapeshifter%~ 
		  END
		  PATCH_IF (~%class%~ STRING_EQUAL_CASE ~OCCULTIST~) BEGIN
			SET_2DA_ENTRY row 7 10 ~0x%hex_shapeshifter%~ 
		  END
		END
	  END
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drfi~ BEGIN
	  SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drma~ BEGIN
	  SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drth~ BEGIN
	  SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drra~ BEGIN
	  SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF ~%kit_clab%~ STRING_EQUAL_CASE ~d5drsh~ BEGIN
	  SET_2DA_ENTRY row 7 10 ~0x%hex_totemic%~ // usability
	END
	PATCH_IF (~%kit_clab%~ STRING_EQUAL_CASE ~d5obst~) OR (~%kit_clab%~ STRING_EQUAL_CASE ~clabdr03~) BEGIN
	  INNER_ACTION BEGIN
		COPY_EXISTING ~d5_u%kit_index%.spl~ ~override~
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 181 target = 1 parameter1 = 2 parameter2 = 0 timing = 9 END
		BUT_ONLY
	  END
	END
	PATCH_IF (simpler_usability_changes = 0) BEGIN
	 PATCH_IF FILE_EXISTS_IN_GAME ~%kit_clab%.2da~ BEGIN
	  INNER_ACTION BEGIN
		APPEND ~%kit_clab%.2da~ ~D5_USABLE   AP_D5_U%kit_index~
/*
		ACTION_IF (%kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18 || %kit_class% = 16) BEGIN
		  ACTION_IF (%kit_class% = 8 || %kit_class% = 14 || %kit_class% = 15 || %kit_class% = 18) BEGIN
			OUTER_TEXT_SPRINT class_letter ~P~
		  END
		  ACTION_IF (%kit_class% = 16) BEGIN
			OUTER_TEXT_SPRINT class_letter ~D~
		  END
		  ACTION_IF !(FILE_EXISTS_IN_GAME ~QD_MC_AP.eff~) BEGIN
			CREATE EFF ~QD_MC_AP~ 
			  WRITE_LONG   0x10 146 //cast spell
			  WRITE_LONG   0x14 2   //preset target 
			  WRITE_LONG   0x20 1   //cast instantly (ignore level) 
			  WRITE_SHORT  0x24 1   //permament until death
			  WRITE_SHORT  0x2c 100 //probability 100% 
		  END
		  COPY_EXISTING ~QD_MC_AP.eff~ ~override/d5_u%kit_index%#.eff~
			WRITE_EVALUATED_ASCII 0x30 ~d5_u%kit_index%~
		  LAF QD_ENSURE_QDMC_SPL STR_VAR base_class = EVAL ~%class_letter%~ END
		  COPY_EXISTING ~QD_MC%class_letter%01.spl~ ~override~ 
			LPF ADD_SPELL_EFFECT INT_VAR insert_point = 0 opcode = 177 target = 1 timing = 9 resist_dispel = 0 power = 0 parameter1 = %kit_code% parameter2 = 9 STR_VAR resource = EVAL ~d5_u%kit_index%#~ END  
		END
*/
	  END
	 END
	END
   END
  END
BUT_ONLY
//__________________________________________________________________________________

//fix trueclass proficiencies for 2.0_______________________________________________
//
ACTION_IF FILE_EXISTS_IN_GAME ~enginest.2da~ BEGIN
	COPY_EXISTING ~weapprof.2da~ ~override~
// Cleric
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 6 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 6 1
// Druid
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 10 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 10 1
// f/c
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 13 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 13 2
// c/m
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 17 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 17 1
// c/t
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 18 1
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 18 1
// f/d
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 19 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 19 2
// f/m/c
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 20 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 20 2
// c/r
	  SET_2DA_ENTRY_LATER ~#weapprof~ 11 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 12 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 13 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 14 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 15 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 16 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 17 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 18 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 19 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 20 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 21 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 22 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 23 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 24 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 25 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 26 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 27 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 28 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 29 21 2
	  SET_2DA_ENTRY_LATER ~#weapprof~ 30 21 2
// go!
	  SET_2DA_ENTRIES_NOW ~#weapprof~ 1
	BUT_ONLY
END
//__________________________________________________________________________________


/* foo, need to make sure this doesn't make things worse
...like, maybe read each relevant proficiency first to make sure it isn't higher
...maybe need to dust off that READ_EFFECT function! :P
*/
//change .CREs' oBG profs to new BG2 profs__________________________________________
//
LAM JOINABLE_NPC_ARRAYS

ACTION_PHP_EACH NON_JOINABLE_NPC_ARRAY AS cre => dv BEGIN
  COPY_EXISTING ~%cre%~ ~override~
	PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
	  READ_BYTE 0x6e large_sword_bg1_prof
	  READ_BYTE 0x6f small_sword_bg1_prof
	  READ_BYTE 0x71 spear_bg1_prof
	  READ_BYTE 0x72 blunt_bg1_prof
	  READ_BYTE 0x73 spiked_bg1_prof
/*
	  PATCH_IF (large_sword_bg1_prof > 0 ) BEGIN
	    ADD_BG2_PROFICIENCY ~PROFICIENCYBASTARDSWORD~ large_sword_bg1_prof
	    ADD_BG2_PROFICIENCY ~PROFICIENCYTWOHANDEDSWORD~ large_sword_bg1_prof
	    ADD_BG2_PROFICIENCY ~PROFICIENCYSCIMITAR~ large_sword_bg1_prof
	    ADD_BG2_PROFICIENCY ~PROFICIENCYKATANA~ large_sword_bg1_prof
	  END
	  PATCH_IF (spear_bg1_prof > 0 ) BEGIN
	    ADD_BG2_PROFICIENCY ~PROFICIENCYSPEAR~ spear_bg1_prof
	    ADD_BG2_PROFICIENCY ~PROFICIENCYHALBERD~ spear_bg1_prof
	  END
	  PATCH_IF (spiked_bg1_prof > 0 ) BEGIN
	    ADD_BG2_PROFICIENCY ~PROFICIENCYMACE~ spiked_bg1_prof
	  END
*/
	  PATCH_IF (large_sword_bg1_prof > spiked_bg1_prof) BEGIN
	    WRITE_BYTE 0x73 large_sword_bg1_prof
	  END
	  PATCH_IF (large_sword_bg1_prof > spear_bg1_prof) BEGIN
	    WRITE_BYTE 0x71 large_sword_bg1_prof
	  END
	  PATCH_IF (spear_bg1_prof > large_sword_bg1_prof) BEGIN
	    WRITE_BYTE 0x6e spear_bg1_prof
	  END
	  PATCH_IF (spear_bg1_prof > blunt_bg1_prof) BEGIN
	    WRITE_BYTE 0x72 spear_bg1_prof
	  END
	END
  BUT_ONLY
END
//__________________________________________________________________________________

END // end function

